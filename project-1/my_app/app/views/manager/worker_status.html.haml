- AWS.memoize do
  - if @elb.load_balancer.exists?
    .container-fluid
      .row
        %table.table.table-striped
          %thead
            %tr
              %th Name
              %th AMI
              %th IP
              %th Hostname
              %th Status
              %th ELB Health
              %th CPU %
              %th Sidekiq
              %th Actions
          %tbody
            - @workers.each do |w|
              - AWS.memoize do
                %tr
                  %td= w.instance.id
                  %td= w.instance.image.id
                  %td= worker_public_ip(w)
                  %td= worker_public_dns(w)
                  %td= w.status
                  %td= worker_health(w)
                  %td= w.latest_cpu_utilization.to_f.round(2)
                  %td= worker_sidekiq_url(w)

                  %td
                    / - if w.safe_to_stop?
                    /   = link_to "Stop", manager_worker_stop_worker_path(w.instance.id), data: {method: :delete, confirm: "Are you sure? This will prevent any pending Sidekiq jobs from completing."}, class: "btn btn-danger"
                    /   |
                    - if w.safe_to_terminate?
                      = link_to "Terminate", manager_worker_terminate_worker_path(w.instance.id), data: {method: :delete, confirm: "Are you sure? This will PERMANENTLY delete any pending Sidekiq jobs."}, class: "btn btn-danger"

    = link_to "Launch Another Instance", manager_start_worker_path, data: {method: :put, confirm: "Are you sure?"}, class: "btn btn-info"
  - else
    No load balancer exists. Launch one to attach Workers.