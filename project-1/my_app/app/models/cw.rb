require "aws_boilerplate.rb"

class CW
  include Singleton
  include AwsBoilerplate

  class << self
    def cw
      @cw ||= AWS::CloudWatch.new(region: default_availability_zone)
    end

    def cwAlarms
      cwAlarms ||= AWS::CloudWatch::AlarmCollection.new(region: default_availability_zone)
    end

    # create an alarm for a given instance
    def create_alarm(i)
      alarm = cwAlarms.create(alarm_name(i), {
            :namespace => 'EC2',
            :metric_name => 'CPUUtilization',
            :comparison_operator => 'GreaterThanThreshold',
            :evaluation_periods => 3,
            :period => 300, # in seconds
            :statistic => 'Average',
            :threshold => 75, 
            :actions_enabled => true,
            :alarm_actions => ['arn:aws:sns:us-east-1:460932295327:cpu_threshold'], # should be created with ELB
            :alarm_description => 'generated by app',
            :unit => 'Percent',
            :dimensions => [{:name => 'InstanceId', :value => i}]
            })
    end
    
    def alarm_name(i)
      "awsec2-" + i +'-CPU-Utilization'
    end
  end

  def delete_alarm(i)
    alarm = cw.alarms.delete(alarm_name(i))
  end

  def alarm_name(i)
    "awsec2-" + i +'-CPU-Utilization'
  end

  def get_alarm(i)
    cw.alarms[alarm_name(i)]
  end
    
  

end
